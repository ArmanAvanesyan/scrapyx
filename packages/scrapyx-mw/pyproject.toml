[project]
name = "scrapyx-mw"
version = "0.1.1"
description = "Composable Scrapy middlewares: API/session headers, debug, captcha polling/webhook, proxy rotation, smart retry."
authors = [{ name = "Your Org" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "scrapy>=2.11",
  "itemloaders>=1.1",
  "python-dotenv>=1.0.1",
  "twisted>=23.10",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2",
  "pytest-twisted>=1.14",
  "pytest-asyncio>=0.24",
  "pytest-cov>=5.0",
  "ruff>=0.6.9",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["scrapyx_mw*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--verbose",
  "--strict-markers",
  "--tb=short",
]
markers = [
  "unit: Unit tests",
  "integration: Integration tests",
  "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src/scrapyx_mw"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
